How did viewing a diff between two versions of a file help you see the bug that was introduced?

It was really nice to compare and automatically see the difference in the two files. This would really help us speed up the debugging process.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
We can revert back to old version as and when we need to.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

we will know exactly which commit does what rather then going and seeing what it does, if done automatically.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because in coding, multiple files are related to each other and they all together make sense and not individually.

How can you use the commands git log and git diff to view the history of files?
git log command tells us the entire commit history. when each commit was made, what was the order of commit. git diff followed by the commit ids of any 2 commits, tells us the difference between the 2 files. green lines indicate addition to new files, red indicate deletion. while black means they remained as it is.

How might using version control make you more confident to make changes that could break something?
Because of confidence that we can revert back to change that was working. So gives us greater freedom to experiment.

Now that you have your workspace set up, what do you want to try using Git for?
Project making.